openapi: 3.0.0
info:
  title: connection.yaml
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /friends:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  title: User
                  type: object
                  properties:
                    username:
                      type: string
                    email:
                      type: string
                    userid:
                      type: string
              examples: {}
      description: getFriends
      requestBody: {}
      parameters:
        - schema:
            type: string
          in: query
          name: token
  /potentialfriends:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  title: User
                  type: object
                  properties:
                    username:
                      type: string
                    email:
                      type: string
                    userid:
                      type: string
      requestBody: {}
      description: getPotentialFriends
      parameters:
        - schema:
            type: string
          in: query
          name: token
  /requests:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  to:
                    type: array
                    items:
                      title: User
                      type: object
                      properties:
                        username:
                          type: string
                        email:
                          type: string
                        userid:
                          type: string
                  from:
                    type: array
                    items:
                      title: User
                      type: object
                      properties:
                        username:
                          type: string
                        email:
                          type: string
                        userid:
                          type: string
      description: GetRequests
      requestBody: {}
      parameters:
        - schema:
            type: string
          in: query
          name: token
    post:
      summary: ''
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                touserid:
                  type: string
                token:
                  $ref: './user-service.yaml#/components/schemas/UserToken'
                fromuserid:
                  type: string
      description: postRequest
    put:
      summary: ''
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      description: UpdateRequest /acceptORDeny
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  $ref: './user-service.yaml#/components/schemas/UserToken'
                touserid:
                  type: string
                acceptdeny:
                  type: string
                fromuserid:
                  type: string
components:
  schemas:
    token:
      title: token
      type: object
      properties:
        userid:
          type: string
        username:
          type: string
    User:
      title: User
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        userid:
          type: string
