openapi: 3.0.0
info:
  title: post
  version: '1.0'
servers:
  - url: 'http://localhost:4030'
paths:
  /post:
    post:
      summary: ''
      responses:
        '201':
          description: OK New post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post'
        '403':
          description: Forbidden
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  $ref: './user-service.yaml#/components/schemas/UserToken'
                userid:
                  type: string
                content:
                  type: string
            examples: {}
    get:
      summary: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/post'
        '400':
          description: Bad Request
      parameters:
        - schema:
            type: string
          in: query
          name: token
        - schema:
            type: string
          in: query
          name: userids
        - schema:
            type: integer
          in: query
          name: startIndex
        - schema:
            type: integer
          in: query
          name: blockSize
  /delete:
    delete:
      summary: ''
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: object
                  properties:
                    userid:
                      type: string
                    username:
                      type: string
                userid:
                  type: string
                postid:
                  type: string
  /modify:
    put:
      summary: ''
      responses:
        '200':
          description: OK modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/post'
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  $ref: './user-service.yaml#/components/schemas/UserToken'
                userid:
                  type: string
                postid:
                  type: string
                content:
                  type: string
components:
  schemas:
    post:
      title: post
      type: object
      properties:
        postid:
          type: string
        userid:
          type: string
        content:
          type: string
        timestamp:
          type: string
